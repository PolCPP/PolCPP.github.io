<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[0xC0CAC0DA]]></title>
  <link href="http://PolCPP.github.io/atom.xml" rel="self"/>
  <link href="http://PolCPP.github.io/"/>
  <updated>2014-06-16T17:00:32+01:00</updated>
  <id>http://PolCPP.github.io/</id>
  <author>
    <name><![CDATA[PolCPP]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to install and use Laravel Administrator Part 2]]></title>
    <link href="http://PolCPP.github.io/blog/2014/06/16/how-to-install-and-use-laravel-administrator-part-2/"/>
    <updated>2014-06-16T15:34:01+01:00</updated>
    <id>http://PolCPP.github.io/blog/2014/06/16/how-to-install-and-use-laravel-administrator-part-2</id>
    <content type="html"><![CDATA[<p>In our previous post we installed Laravel 4.2, created a very simple auth system and configured Frozennode administrator to edit the users model, in this second part we&rsquo;ll build a real(ish) world case creating a model with some relationships and see how it performs on the administrator.</p>

<!-- more -->


<p>First, so you can know about the app structure, we&rsquo;re talking about a small part of a remake of this <a href="http://arkive.info">site</a> under Laravel. In this case we&rsquo;re talking about 2 tables and pivot one linking them. Enemy and Item and a pivot table is Enemy item drops. An enemy can drop one of multiple items, and items can be drop by many enemies.</p>

<h3>Enemy</h3>

<ul>
<li>name: <em>string</em></li>
<li>name_jp: <em>string</em></li>
<li>is_rare: <em>string</em></li>
<li>image: <em>string</em></li>
</ul>


<h3>Item</h3>

<ul>
<li>name: <em>string</em></li>
<li>name_jp: <em>string</em></li>
<li>desc: <em>text</em></li>
<li>desc_jp: <em>text</em></li>
<li>rarity: <em>integer</em></li>
<li>max_stack_on_hand: <em>integer</em></li>
<li>max_stack_in_storage: <em>integer</em></li>
<li>is_arks_cash: <em>boolean</em></li>
<li>is_tradable: <em>boolean</em></li>
<li>account_bound_on_equip: <em>boolean</em></li>
<li>is_account_bound: <em>boolean</em></li>
<li>can_be_dropped: <em>boolean</em></li>
<li>can_be_sold: <em>boolean</em></li>
<li>can_be_exchanged: <em>boolean</em></li>
<li>can_be_fed_to_mag: <em>boolean</em></li>
<li>buy_price: <em>integer</em></li>
<li>sell_price: <em>integer</em></li>
<li>notes: <em>text</em></li>
<li>image: <em>string</em></li>
</ul>


<h3>Drop</h3>

<ul>
<li>enemy_id: <em>integer</em></li>
<li>item_id: <em>integer</em></li>
<li>drop_rate: <em>float</em></li>
</ul>


<p>Now that we know what we&rsquo;re gonna build let&rsquo;s start creating those database migrations.</p>

<pre><code>php artisan generate:migration create_enemies_table --fields="name:string, name_jp:string, is_rare:string, image:string"

php artisan generate:migration create_items_table --fields="name:string, name_jp:string, desc:text, desc_jp:text, rarity:integer, max_stack_on_hand:integer, max_stack_in_storage:integer, is_arks_cash:boolean, is_tradable:boolean, account_bound_on_equip:boolean, is_account_bound:boolean, can_be_dropped:boolean, can_be_sold:boolean, can_be_exchanged:boolean, can_be_fed_to_mag:boolean, buy_price:integer, sell_price:integer, notes:text, image:string"

php artisan generate:pivot enemies items
</code></pre>

<p>When running migrations using Jeffrey Way&rsquo;s generators make sure there&rsquo;s a space between the comma and the next field like this <em>&ldquo;name:string, name_jp:string&rdquo;</em>. If you input something like <em>&ldquo;name:string,name_jp:string&rdquo;</em> you&rsquo;ll get a weird output.</p>

<p>Since Laravel generators don&rsquo;t allow us to add fields directly on pivot tables let&rsquo;s open our pivot table migration on <em>app/database/migrations/</em> and add the drop_rate value and leave the up function like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public function up()
</span><span class='line'>{
</span><span class='line'>  Schema::create('enemy_item', function(Blueprint $table)
</span><span class='line'>  {
</span><span class='line'>      $table-&gt;increments('id');
</span><span class='line'>      $table-&gt;integer('enemy_id')-&gt;unsigned()-&gt;index();
</span><span class='line'>      $table-&gt;foreign('enemy_id')-&gt;references('id')-&gt;on('enemies')-&gt;onDelete('cascade');
</span><span class='line'>      $table-&gt;integer('item_id')-&gt;unsigned()-&gt;index();
</span><span class='line'>      $table-&gt;foreign('item_id')-&gt;references('id')-&gt;on('items')-&gt;onDelete('cascade');
</span><span class='line'>      $table-&gt;float('drop_rate');
</span><span class='line'>      $table-&gt;timestamps();
</span><span class='line'>  });
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>With our schema built, let&rsquo;s migrate our database and start generating our models.</p>

<pre><code>php artisan migrate
php artisan generate:model Item
php artisan generate:model Enemy
</code></pre>

<p>And now we&rsquo;ll add the relationships on both of them.</p>

<p>So app/models/ Enemy.php and Item.php will end like this respectively.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>class Enemy extends \Eloquent {
</span><span class='line'>  protected $fillable = [];
</span><span class='line'>
</span><span class='line'>  public function drops()
</span><span class='line'>  {
</span><span class='line'>      return $this-&gt;belongsToMany('Item')-&gt;withPivot('drop_rate');
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>class Item extends \Eloquent {
</span><span class='line'>  protected $fillable = [];
</span><span class='line'>
</span><span class='line'>  public function dropped_by()
</span><span class='line'>  {
</span><span class='line'>      return $this-&gt;belongsToMany('Enemy')-&gt;withPivot('drop_rate');
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Probably you&rsquo;re wondering whats that withPivot doing. By default getting a privot table using the &ndash;>pivot attribute (you&rsquo;ll see it in action the next example) only gets the keys, so we need to directly specify we want the drop rate.</p>

<p>Now let&rsquo;s see how these in action just using code <em>(you can skip this since it&rsquo;s not related to the admin but just an example of how this works)</em>.</p>

<p>Replace the / route with this new function on /app/routes.php</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Route::get('/', function()
</span><span class='line'>{
</span><span class='line'>  // We need this we're using mass assignment to create the enemy/item.
</span><span class='line'>  Eloquent::unguard();
</span><span class='line'>
</span><span class='line'>  // Let's create an enemy
</span><span class='line'>  $enemy = Enemy::firstOrCreate(array('name' =&gt; 'TestEnemy'));
</span><span class='line'>
</span><span class='line'>  // And now a drop
</span><span class='line'>  $item = Item::firstOrCreate(array('name' =&gt; 'TestDrop'));
</span><span class='line'>
</span><span class='line'>  // Now let's add our item to the drop table
</span><span class='line'>  $enemy-&gt;drops()-&gt;attach($item);
</span><span class='line'>
</span><span class='line'>  // In case we want to add it with a specific drop rate.
</span><span class='line'>  $enemy-&gt;drops()-&gt;attach($item, array('drop_rate' =&gt; 12.34));
</span><span class='line'>
</span><span class='line'>  // Now imagine we want to see all our drops and their drop rate. 
</span><span class='line'>  foreach ($enemy-&gt;drops as $drop)
</span><span class='line'>  {
</span><span class='line'>      echo $drop-&gt;name . ": drop rate is: " . $drop-&gt;pivot-&gt;drop_rate . "&lt;br/&gt;";
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  // Now let's get rid of all the drops. 
</span><span class='line'>  // This does not delete anything from the item table
</span><span class='line'>  // only gets rid of the relation.
</span><span class='line'>  $enemy-&gt;drops()-&gt;detach(); 
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>I think the code is self explanatory with those comments, but in TLDR, we create an item, an enemy then we link them using attach, twice (one without drop rate and another with it), we display them and then we clean the relationships.</p>

<p>If you run the base url now you&rsquo;ll probably see something like:</p>

<pre><code>TestDrop: drop rate is: 0.00
TestDrop: drop rate is: 12.34
</code></pre>

<p>With that simple example done let&rsquo;s build our admin panel. To do that we&rsquo;ll need to create the item.php and enemies.php in <em>/app/config/administrator/</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;?php
</span><span class='line'>
</span><span class='line'>  /**
</span><span class='line'>   * Item model config
</span><span class='line'>   */
</span><span class='line'>
</span><span class='line'>  return array(
</span><span class='line'>
</span><span class='line'>      'title' =&gt; 'Items',
</span><span class='line'>      'single' =&gt; 'item',
</span><span class='line'>      'model' =&gt; 'Item',
</span><span class='line'>
</span><span class='line'>      'columns' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Name',
</span><span class='line'>          ),
</span><span class='line'>          'name_jp' =&gt; array(
</span><span class='line'>              'title' =&gt; 'JP Name',
</span><span class='line'>          ),          
</span><span class='line'>          'rarity' =&gt; array (
</span><span class='line'>              'title' =&gt; 'Rarity'
</span><span class='line'>          ),
</span><span class='line'>          'image' =&gt; array (
</span><span class='line'>              'title' =&gt; 'Image',
</span><span class='line'>              'output' =&gt; '&lt;img src="http://PolCPP.github.io/uploads/items/(:value)" height="100" /&gt;',
</span><span class='line'>          ),
</span><span class='line'>          'drops' =&gt; array (
</span><span class='line'>              'title' =&gt; 'Dropped by',
</span><span class='line'>              'relationship' =&gt; 'droppedBy',
</span><span class='line'>              'select' =&gt; 'COUNT((:table).id)'
</span><span class='line'>          )
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>      'edit_fields' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Name',
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'name_jp' =&gt; array(
</span><span class='line'>              'title' =&gt; 'JP Name',
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'desc' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Description',
</span><span class='line'>              'type' =&gt; 'markdown' 
</span><span class='line'>          ),
</span><span class='line'>          'desc_jp' =&gt; array(
</span><span class='line'>              'title' =&gt; 'JP Description',
</span><span class='line'>              'type' =&gt; 'markdown' 
</span><span class='line'>          ),
</span><span class='line'>          'rarity' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Rarity',
</span><span class='line'>              'type' =&gt; 'number'
</span><span class='line'>          ),
</span><span class='line'>          'max_stack_on_hand' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Max stack on hand',
</span><span class='line'>              'type' =&gt; 'number'
</span><span class='line'>          ),
</span><span class='line'>          'max_stack_in_storage' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Max stack on storage',
</span><span class='line'>              'type' =&gt; 'number' 
</span><span class='line'>          ),
</span><span class='line'>          'is_arks_cash' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is an arks cash item',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'is_tradable' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is tradable',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'account_bound_on_equip' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Bound on equip',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'is_account_bound' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is account bound',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_dropped' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be dropped',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_sold' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be sold',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_exchanged' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be exchanged',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_fed_to_mag' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be fed to mag',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'buy_price' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Buy price',
</span><span class='line'>              'type' =&gt; 'number' 
</span><span class='line'>          ),
</span><span class='line'>          'sell_price' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Sell price',
</span><span class='line'>              'type' =&gt; 'number' 
</span><span class='line'>          ),
</span><span class='line'>          'notes' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Notes',
</span><span class='line'>              'type' =&gt; 'markdown' 
</span><span class='line'>          ),
</span><span class='line'>          'image' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Image',
</span><span class='line'>              'type' =&gt; 'image',
</span><span class='line'>              'location' =&gt; public_path() . '/uploads/items/',
</span><span class='line'>          ),
</span><span class='line'>          'droppedBy' =&gt; array(
</span><span class='line'>              'type' =&gt; 'relationship',
</span><span class='line'>              'title' =&gt; 'Dropped by',
</span><span class='line'>              'name_field' =&gt; 'name',
</span><span class='line'>          )
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>      'filters' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Name',
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'rarity' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Rarity',
</span><span class='line'>              'type' =&gt; 'number'
</span><span class='line'>          ),
</span><span class='line'>          'max_stack_on_hand' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Max stack on hand',
</span><span class='line'>              'type' =&gt; 'number'
</span><span class='line'>          ),
</span><span class='line'>          'max_stack_in_storage' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Max stack on storage',
</span><span class='line'>              'type' =&gt; 'number' 
</span><span class='line'>          ),
</span><span class='line'>          'is_arks_cash' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is an arks cash item',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'is_tradable' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is tradable',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'account_bound_on_equip' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Bound on equip',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'is_account_bound' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is account bound',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_dropped' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be dropped',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_sold' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be sold',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_exchanged' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be exchanged',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'can_be_fed_to_mag' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Can be fed to mag',
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'droppedBy' =&gt; array(
</span><span class='line'>              'type' =&gt; 'relationship',
</span><span class='line'>              'title' =&gt; 'Dropped by',
</span><span class='line'>              'name_field' =&gt; 'name',
</span><span class='line'>          )
</span><span class='line'>      ),
</span><span class='line'>  );      </span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;?php
</span><span class='line'>
</span><span class='line'>  /**
</span><span class='line'>   * Enemy model config
</span><span class='line'>   */
</span><span class='line'>
</span><span class='line'>  return array(
</span><span class='line'>
</span><span class='line'>      'title' =&gt; 'Enemies',
</span><span class='line'>      'single' =&gt; 'enemy',
</span><span class='line'>      'model' =&gt; 'Enemy',
</span><span class='line'>
</span><span class='line'>      'columns' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'name' 
</span><span class='line'>          ),
</span><span class='line'>          'name_jp' =&gt; array(
</span><span class='line'>              'title' =&gt; 'name_jp' 
</span><span class='line'>          ),
</span><span class='line'>          'is_rare' =&gt; array(
</span><span class='line'>              'title' =&gt; 'is_rare' 
</span><span class='line'>          ),
</span><span class='line'>          'image' =&gt; array(
</span><span class='line'>              'title' =&gt; 'image',
</span><span class='line'>              'output' =&gt; '&lt;img src="http://PolCPP.github.io/uploads/items/(:value)" height="100" /&gt;',
</span><span class='line'>          ),
</span><span class='line'>          'drops' =&gt; array(
</span><span class='line'>              'title' =&gt; 'enemy drops',
</span><span class='line'>              'relationship' =&gt; 'drops',
</span><span class='line'>              'select' =&gt; 'COUNT((:table).name)'
</span><span class='line'>          )
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>      'edit_fields' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Name', 
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'name_jp' =&gt; array(
</span><span class='line'>              'title' =&gt; 'JP Name', 
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'is_rare' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is rare?', 
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'image' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Image', 
</span><span class='line'>              'type' =&gt; 'image',
</span><span class='line'>              'location' =&gt; public_path() . '/uploads/items/'
</span><span class='line'>           ),
</span><span class='line'>          'drops' =&gt; array(
</span><span class='line'>              'type' =&gt; 'relationship',
</span><span class='line'>              'title' =&gt; 'Drops',
</span><span class='line'>              'name_field' =&gt; 'name',
</span><span class='line'>          )
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      'filters' =&gt; array(
</span><span class='line'>          'name' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Name', 
</span><span class='line'>              'type' =&gt; 'text' 
</span><span class='line'>          ),
</span><span class='line'>          'is_rare' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Is rare?', 
</span><span class='line'>              'type' =&gt; 'bool' 
</span><span class='line'>          ),
</span><span class='line'>          'drops' =&gt; array(
</span><span class='line'>              'type' =&gt; 'relationship',
</span><span class='line'>              'title' =&gt; 'Drops',
</span><span class='line'>              'name_field' =&gt; 'name',
</span><span class='line'>          )           
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>  );</span></code></pre></td></tr></table></div></figure>


<p>After creating those two files remember to add the item and enemy values to the menu array in <em>app/config/packages/frozennode/administrator/administrator.php</em></p>

<p>It&rsquo;s possible that you will be getting the following exception when going to the Item and Enemy admin pages: <em>BadMethodCallException Call to undefined method <strong>Illuminate\Database\Query\Builder::isSoftDeleting()</strong></em>  this is a small issue with Administrator and laravel 4.2, so depending if they patch this up you&rsquo;ll probably need a newer version of administrator or apply <a href="https://github.com/FrozenNode/Laravel-Administrator/commit/7b6e5fd83069f12a15f5463262eb4cf8f092215f">this patch by yourself</a>. Make sure you read my comment on that commit, or you&rsquo;ll find problems later on.</p>

<p>With these possible issues resolved let&rsquo;s explain this a bit. As with the Users models from our previous tutorial, we have two big sections, <strong>columns</strong> and <strong>edit_fields</strong>, but now we also have a <strong>filters</strong> section.</p>

<p>If you&rsquo;re wondering filters work, it&rsquo;s exactly the same as the edit_fields, except the image type field does not work with them (you couldn&rsquo;t filter by image anyway).</p>

<p>We&rsquo;re gonna center ourselves on the relationships, since it&rsquo;s the most complicated but if you want to see details of the other options i&rsquo;ve set for the columns (like the image preview) <a href="http://administrator.frozennode.com/docs/columns">check this documentation link</a> and if you&rsquo;re curious about the edit_fields types <a href="http://administrator.frozennode.com/docs/fields">check this one</a> and the Field Types submenus on the left side of that page. Their docs are really neat and with clear examples. So let&rsquo;s get into the relationships.</p>

<p>Getting back into our column view, to get data from related columns we use this.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>'drops' =&gt; array(
</span><span class='line'>  'title' =&gt; 'enemy drops',
</span><span class='line'>  'relationship' =&gt; 'drops',
</span><span class='line'>  'select' =&gt; 'COUNT((:table).name)'
</span><span class='line'>)</span></code></pre></td></tr></table></div></figure>


<p>We have two new mandatory options here. Relationship is always the method we created on the model and select works like a query. The (:table) value will always reference to the related table.</p>

<p>Also it will affect all values on toMany relationships so it returns a field on toOne ones. What does this mean? In our case doing <em>&lsquo;(:table).name&rsquo;</em> wouldn&rsquo;t return anything since it would return one or more than one field, so we use a SQL aggregation function. But if we had a one to one relationship we could return the name (we&rsquo;ll see an example soon).</p>

<p>Now let&rsquo;s see how this works on edit_fields.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>'drops' =&gt; array(
</span><span class='line'>  'type' =&gt; 'relationship',
</span><span class='line'>  'title' =&gt; 'Drops',
</span><span class='line'>  'name_field' =&gt; 'name',
</span><span class='line'>)  </span></code></pre></td></tr></table></div></figure>


<p>As a type we have relationship, and then we have a value named name_field. Thats the column from the related table that you want to show to the user. In our case since the item name is the most useful to assign things we use it.</p>

<p>If you see we also use the &lsquo;drops&rsquo; model method as the array key to define the column.</p>

<p>Now, you may have realised that with this setup <a href="https://github.com/FrozenNode/Laravel-Administrator/issues/104">we can&rsquo;t set the drop rate values on the pivot table</a>.</p>

<p>That means that we need to setup a new administrator view to be able to set those views and a new model. So lets build them.</p>

<pre><code>php artisan generate:model EnemyItem
</code></pre>

<p>Time to edit the model.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>class EnemyItem extends \Eloquent {
</span><span class='line'>  protected $fillable = [];
</span><span class='line'>    protected $table = 'enemy_item';
</span><span class='line'>
</span><span class='line'>  public function Enemy()
</span><span class='line'>  {
</span><span class='line'>      return $this-&gt;belongsTo('Enemy');
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  public function Item()
</span><span class='line'>  {
</span><span class='line'>      return $this-&gt;belongsTo('Item');
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Since it&rsquo;s a pivot table we add the enemy and item relationships. Now let&rsquo;s create a &ldquo;enemyitems.php&rdquo; admin menu.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;?php
</span><span class='line'>
</span><span class='line'>      /**
</span><span class='line'>       * EnemyItems model config
</span><span class='line'>       */
</span><span class='line'>
</span><span class='line'>      return array(
</span><span class='line'>
</span><span class='line'>          'title' =&gt; 'Drops',
</span><span class='line'>          'single' =&gt; 'drop',
</span><span class='line'>          'model' =&gt; 'EnemyItem',
</span><span class='line'>
</span><span class='line'>          'columns' =&gt; array(
</span><span class='line'>              'drop_rate' =&gt; array(
</span><span class='line'>                  'title' =&gt; 'Drop Rate',
</span><span class='line'>              ),
</span><span class='line'>              
</span><span class='line'>              'enemy' =&gt; array (
</span><span class='line'>                  'title' =&gt; 'Dropped by',
</span><span class='line'>                  'relationship' =&gt; 'Enemy',
</span><span class='line'>                  'select' =&gt; '(:table).name'
</span><span class='line'>              ),
</span><span class='line'>
</span><span class='line'>              'item' =&gt; array (
</span><span class='line'>                  'title' =&gt; 'Item',
</span><span class='line'>                  'relationship' =&gt; 'Item',
</span><span class='line'>                  'select' =&gt; '(:table).name'
</span><span class='line'>              )
</span><span class='line'>          ),
</span><span class='line'>
</span><span class='line'>          'edit_fields' =&gt; array(
</span><span class='line'>              'drop_rate' =&gt; array(
</span><span class='line'>                  'title' =&gt; 'Drop rate',
</span><span class='line'>                  'type' =&gt; 'number' 
</span><span class='line'>              ),
</span><span class='line'>              
</span><span class='line'>              'enemy' =&gt; array(
</span><span class='line'>                  'type' =&gt; 'relationship',
</span><span class='line'>                  'title' =&gt; 'Dropped by',
</span><span class='line'>                  'name_field' =&gt; 'name',
</span><span class='line'>              ),
</span><span class='line'>
</span><span class='line'>              'item' =&gt; array(
</span><span class='line'>                  'type' =&gt; 'relationship',
</span><span class='line'>                  'title' =&gt; 'Drop',
</span><span class='line'>                  'name_field' =&gt; 'name',
</span><span class='line'>              )
</span><span class='line'>          ),
</span><span class='line'>
</span><span class='line'>          'filters' =&gt; array(
</span><span class='line'>              'enemy' =&gt; array(
</span><span class='line'>                  'type' =&gt; 'relationship',
</span><span class='line'>                  'title' =&gt; 'Dropped by',
</span><span class='line'>                  'name_field' =&gt; 'name',
</span><span class='line'>              ),
</span><span class='line'>              'item' =&gt; array(
</span><span class='line'>                  'type' =&gt; 'relationship',
</span><span class='line'>                  'title' =&gt; 'Drop',
</span><span class='line'>                  'name_field' =&gt; 'name',
</span><span class='line'>              ),
</span><span class='line'>          ),
</span><span class='line'>
</span><span class='line'>      );</span></code></pre></td></tr></table></div></figure>


<p>As you can see it&rsquo;s pretty similar but this is the case where on our relations we can use <em>&lsquo;select&rsquo; => &lsquo;(:table).name&rsquo;</em> on the column name and we&rsquo;ll get the Item name and the enemy name since our relationship is many to one on both item and enemy.</p>

<p>And finally, add this new administrator to the menu config array on <em>administrator.php</em> and we&rsquo;re done</p>

<p>Before finishing just some tips.</p>

<ul>
<li><p>Administrator lets you do more things with relationships so make sure you check the documentation to get a more deeper insight, but what we&rsquo;ve been covering here should be useful for basic admin panels.</p></li>
<li><p>While it looks like we did a lot of code, if you use sublime text, it&rsquo;s multicursor is extremely useful to create this really fast from the field lists we had at the beginning of this post.</p></li>
<li><p>As i said on the first part of this tutorial if you want to use sentry or any auth library with frozennode administrator you can without issues, <a href="http://administrator.frozennode.com/docs/configuration#permission">just check this to see how to do it</a>.</p></li>
</ul>


<p>That&rsquo;s all, we&rsquo;re done with this two part tutorial. I Hope it was useful.</p>

<p>As with the previous one you can access the repo of this tutorial by clicking <a href="https://github.com/PolCPP/Laravel-administrator-tutorial">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install and use Laravel administrator Part 1]]></title>
    <link href="http://PolCPP.github.io/blog/2014/06/12/how-to-install-and-use-laravel-administrator-part-1/"/>
    <updated>2014-06-12T16:20:53+01:00</updated>
    <id>http://PolCPP.github.io/blog/2014/06/12/how-to-install-and-use-laravel-administrator-part-1</id>
    <content type="html"><![CDATA[<p>Trying to get FrozenNode&rsquo;s laravel administrator bundle to work, i saw that there was no guide that set you up from zero to go with Laravel and administrator. This set of guides will cover the basic Laravel setup with administrator and later on setting up more advanced models.</p>

<!-- more -->


<p>First of all we install Laravel, get inside the directory and install frozennode administrator.</p>

<pre><code>composer create-project laravel/laravel admin_project --prefer-dist
cd admin_project
composer require frozennode/administrator:dev-master
</code></pre>

<p>Make sure you add this line to the providers array in <em>/app/config/app.php</em></p>

<pre><code>'Frozennode\Administrator\AdministratorServiceProvider',
</code></pre>

<p>Once this is done you just have to publish the config and assets into the project with these two commands.</p>

<pre><code>php artisan config:publish frozennode/administrator 
php artisan asset:publish frozennode/administrator
</code></pre>

<p>Now we setup the project to work locally on the database.</p>

<ol>
<li><p>Edit the start.php to add your computer name to the array.</p>

<pre><code> $env = $app-&gt;detectEnvironment(array(
     'local' =&gt; array('homestead','myComputer'),
 ));
</code></pre></li>
<li><p>Edit app/config/local/database.php with working database settings. If the file doesn&rsquo;t exist make a copy from app/config/database.php</p></li>
</ol>


<p>And it&rsquo;s installed! But we&rsquo;re not done yet.</p>

<h2>Creating a simple auth</h2>

<p>Administrator is auth agnostic so you can use your own custom built auth, Sentry or any plugabble auth system compatible with Laravel, in our case we&rsquo;ll build a simple auth system based on Laravel auth that will let us in.</p>

<p>If you have your own custom login procedure you can completely skip this step.</p>

<p>I&rsquo;m going to use Jeffrey Way generators to make things faster so we install it too.</p>

<pre><code>composer require --dev way/generators:dev-master
</code></pre>

<p>Like with administrator we add it to providers</p>

<pre><code>'Way\Generators\GeneratorsServiceProvider'
</code></pre>

<p>Now with al the tools installed, let&rsquo;s get to work and create the migration and seed.</p>

<pre><code>php artisan generate:migration create_users_table --fields="username:string, email:string, password:string"
php artisan generate:seed user
</code></pre>

<p>We edit the UserTableSeeder.php that we generated in <em>app/database/seeds</em> and replace its contents with this.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>class UserTableSeeder extends Seeder {
</span><span class='line'>
</span><span class='line'>  public function run()
</span><span class='line'>  {
</span><span class='line'>      User::create([
</span><span class='line'>          'username'   =&gt; 'admin',
</span><span class='line'>          'email'      =&gt; 'admin@mysite.com',
</span><span class='line'>          'password'   =&gt; Hash::make('thepass'),
</span><span class='line'>          'created_at' =&gt; new DateTime(),
</span><span class='line'>          'updated_at' =&gt; new DateTime()
</span><span class='line'>      ]);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>To make it work we&rsquo;ll need to uncomment the following line from DatabaseSeeder.php (same directory as UserTableSeeder).</p>

<pre><code>$this-&gt;call('UserTableSeeder');
</code></pre>

<p>Now let&rsquo;s migrate the database and seed it before building the login page and it&rsquo;s controllers.</p>

<pre><code>php artisan migrate
php artisan db:seed
</code></pre>

<p>And with this we have our database up and running, with a working user. Time to build the controller and templates to be able to log in.</p>

<pre><code>php artisan generate:controller LoginController
</code></pre>

<p>Before starting to add the controllers we&rsquo;ll add a route editing app/routes.php so Laravel shows us the login page when we go to <em>myCoolSite.com/login</em></p>

<pre><code>Route::controller('/login', 'LoginController');
</code></pre>

<p>Now we&rsquo;ll edit our login controller and leave it like this.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>class LoginController extends \BaseController {
</span><span class='line'>
</span><span class='line'> 
</span><span class='line'>  public function getIndex()
</span><span class='line'>  {
</span><span class='line'>      return View::make('login.index');
</span><span class='line'>  }
</span><span class='line'> 
</span><span class='line'>  public function postIndex()
</span><span class='line'>  {
</span><span class='line'>      $username = Input::get('username');
</span><span class='line'>      $password = Input::get('password');
</span><span class='line'> 
</span><span class='line'>      if (Auth::attempt(['username' =&gt; $username, 'password' =&gt; $password]))
</span><span class='line'>      {
</span><span class='line'>          return Redirect::intended('/admin');
</span><span class='line'>      }
</span><span class='line'> 
</span><span class='line'>      return Redirect::back()
</span><span class='line'>          -&gt;withInput()
</span><span class='line'>          -&gt;withErrors('Username or Password are incorrect.');
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>What we&rsquo;re doing here is pretty simple. When the user navigates to /login we&rsquo;ll display him a login form, and when sendsthat form we&rsquo;ll auth him, in case it fails we&rsquo;ll redirect them back with an error message.</p>

<p>Since we have the controller done let&rsquo;s build the templates</p>

<p>First we&rsquo;re going to build the structure. We&rsquo;ll need a base template that we&rsquo;ll store on <em>app/views/layouts</em>. and then our login.index view that we will store on <em>views/login</em></p>

<p>So let&rsquo;s start with the base template (<em>app/views/layouts/master.blade.php</em>)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html lang='en'&gt;
</span><span class='line'>  &lt;head&gt;
</span><span class='line'>      &lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"&gt; 
</span><span class='line'>      &lt;meta charset="utf-8"&gt;
</span><span class='line'>      &lt;meta name='viewport' content='width=device-width, initial-scale=1'&gt;
</span><span class='line'>
</span><span class='line'>      &lt;title&gt;@yield('title')&lt;/title&gt; 
</span><span class='line'>      &lt;link rel='stylesheet' href='//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css'&gt;
</span><span class='line'>      &lt;style&gt;
</span><span class='line'>          body {
</span><span class='line'>              margin-top: 10px;
</span><span class='line'>          }
</span><span class='line'>      &lt;/style&gt;
</span><span class='line'>  &lt;/head&gt;
</span><span class='line'>  &lt;body&gt;
</span><span class='line'>      &lt;div class='container-fluid'&gt;
</span><span class='line'>          &lt;div class='row'&gt;
</span><span class='line'>              @yield('content')
</span><span class='line'>          &lt;/div&gt;
</span><span class='line'>      &lt;/div&gt;
</span><span class='line'>  &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<p>Nothing really fancy here we setup some placeholders like the Title and we just get the latest bootstrap version (<em>3.1.1</em>) and build some basic html.</p>

<p>Now let&rsquo;s get to the login template which i&rsquo;m basing on <a href="http://bootsnipp.com/snippets/featured/compact-login-form-bs-3">this</a>. So create <em>app/views/login/index.blade.php</em> and add these contents:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@extends('layouts.master')
</span><span class='line'>
</span><span class='line'>@section('title') Login @stop
</span><span class='line'>
</span><span class='line'>@section('content')
</span><span class='line'>&lt;div class="col-md-4 col-md-offset-4"&gt;
</span><span class='line'>        &lt;div class="panel panel-default"&gt;
</span><span class='line'>                &lt;div class="panel-heading"&gt;
</span><span class='line'>                        &lt;h3 class="panel-title"&gt;Please sign in&lt;/h3&gt;
</span><span class='line'>                &lt;/div&gt;
</span><span class='line'>                &lt;div class="panel-body"&gt;
</span><span class='line'>                        @if ($errors-&gt;has())
</span><span class='line'>                                @foreach ($errors-&gt;all() as $error)
</span><span class='line'>                                        &lt;div class='alert-danger alert'&gt;{{ $error }}&lt;/div&gt;
</span><span class='line'>                                @endforeach
</span><span class='line'>                        @endif
</span><span class='line'>
</span><span class='line'>                        {{ Form::open(['role' =&gt; 'form']) }}
</span><span class='line'>                        &lt;fieldset&gt;
</span><span class='line'>                                &lt;div class="form-group"&gt;
</span><span class='line'>                                        {{ Form::text('username', null, ['placeholder' =&gt; 'Username', 'class' =&gt; 'form-control']) }}
</span><span class='line'>                                &lt;/div&gt;
</span><span class='line'>                                &lt;div class="form-group"&gt;
</span><span class='line'>                                        {{ Form::password('password', ['placeholder' =&gt; 'Password', 'class' =&gt; 'form-control']) }}
</span><span class='line'>                                &lt;/div&gt;
</span><span class='line'>                                        {{ Form::submit('Login', ['class' =&gt; 'btn btn-primary']) }}
</span><span class='line'>                        &lt;/fieldset&gt;
</span><span class='line'>                        {{ Form::close() }}
</span><span class='line'>                &lt;/div&gt;
</span><span class='line'>        &lt;/div&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>@stop</span></code></pre></td></tr></table></div></figure>


<p>And that it. If we run it using <strong>php artisan serve</strong> navigate to localhost:8000/login and try to login with incorrect credentials will fail, and if we set the correct ones we&rsquo;ll get redirected to /admin which will give us an administrator error, because we haven&rsquo;t configured it yet!</p>

<h2>Configuring administrator and our first &ldquo;model-admin&rdquo;</h2>

<p>First of all we&rsquo;ll need to create a few directories as per our config.</p>

<p>Open <em>app/config/packages/frozennode/administrator/administrator.php</em> (if you don&rsquo;t have it make sure you ran <em>php artisan config:publish frozennode/administrator</em> on the first step.)</p>

<p>Administrator needs a few directories and files to work that are setup on the following variables</p>

<pre><code>'model_config_path' =&gt; app('path') . '/config/administrator',
'settings_config_path' =&gt; app('path') . '/config/administrator/settings',
</code></pre>

<p>You can change those values to existant directories or just create the path, in our case we&rsquo;ll create <em>app/config/administrator</em> and <em>app/config/administrator/settings</em>.</p>

<p>Next we&rsquo;ll need to add a menu option so administrator shows someting on it (it&rsquo;s required). So we&rsquo;ll edit the menu array and add &lsquo;users&rsquo;. It&rsquo;s important that the menu names are the same than the ones from the model config options, including case.</p>

<pre><code>'menu' =&gt; array('users'),
</code></pre>

<p>We&rsquo;ll also edit the home_page so it displays us the users editor when we go to /admin.</p>

<pre><code>'home_page' =&gt; 'users',  
</code></pre>

<p>Finally since our login page is /login we need to change the login_path variable to login</p>

<pre><code>'login_path' =&gt; 'login',
</code></pre>

<p>And that&rsquo;s all for now. If you try to load we&rsquo;ll still get an error, that&rsquo;s because we haven&rsquo;t configured the user model editor, so time to create our users.php in <em>app/config/administrator</em>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> &lt;?php
</span><span class='line'>
</span><span class='line'>  /**
</span><span class='line'>   * Users model config
</span><span class='line'>   */
</span><span class='line'>
</span><span class='line'>  return array(
</span><span class='line'>
</span><span class='line'>      'title' =&gt; 'Users',
</span><span class='line'>      'single' =&gt; 'user',
</span><span class='line'>      'model' =&gt; 'User',
</span><span class='line'>
</span><span class='line'>      'columns' =&gt; array(
</span><span class='line'>          'email' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Email',
</span><span class='line'>          ),
</span><span class='line'>          'username' =&gt; array(
</span><span class='line'>              'title' =&gt; 'First Name',
</span><span class='line'>          ),
</span><span class='line'>      ),
</span><span class='line'>
</span><span class='line'>      'edit_fields' =&gt; array(
</span><span class='line'>          'email' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Email',
</span><span class='line'>              'type' =&gt; 'text',
</span><span class='line'>          ),
</span><span class='line'>          'username' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Username',
</span><span class='line'>              'type' =&gt; 'text',
</span><span class='line'>          ),
</span><span class='line'>          'password' =&gt; array(
</span><span class='line'>              'title' =&gt; 'Password',
</span><span class='line'>              'type' =&gt; 'password',
</span><span class='line'>          ),
</span><span class='line'>      ),
</span><span class='line'>  );</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>That seems a lot of code but it&rsquo;s pretty simple.</p>

<ol>
<li><p>Title. Refers to the page/menu titles.</p></li>
<li><p>Single. The singular name of the model. It&rsquo;s used to fill the administrator texts like the &ldquo;Create User&rdquo; button.</p></li>
<li><p>Model. The model name.</p></li>
<li><p>Columns. The columns you want to display on the list viewer of the model.</p></li>
<li><p>Edit_fields. The fields you want to be able to edit/create. If you want to know more details on the fields, check the <a href="http://administrator.frozennode.com/docs/fields">following site</a></p></li>
</ol>


<p>There are a lot of configurable settings so check <a href="http://administrator.frozennode.com/docs/model-configuration">http://administrator.frozennode.com/docs/model-configuration</a> to see all that you can build with administrator.</p>

<p>And that&rsquo;s it. There are a few details that you should have in mind though. First is that if we leave it like this the passwords that we save will be stored in plain text and won&rsquo;t work for authorization. But you can fix that easily adding this mutator to the User model.</p>

<pre><code>public function setPasswordAttribute($value)
{
    $this-&gt;attributes['password']  = $value;
}
</code></pre>

<p>And we&rsquo;re done, kinda, try to add an user and leave it blank. Even if we have nulls on our database it saves blank characters, and we shouldn&rsquo;t allow that. Don&rsquo;t worry, validation to the rescue. Add this to the model and we will have validation.</p>

<pre><code>public static $rules = array(
        'username' =&gt; 'required',
        'email' =&gt; 'required|email|unique:users',
        'password' =&gt; 'required|min:8',        
);
</code></pre>

<p>I recommend you to put those validation rules on the model instead of using the administrator rules option. The reaons is that on fields like password that has mutators it would give false positives since hashing an empty value would create a hash that would pass the validation.</p>

<p>And that&rsquo;s all for Part 1. On part 2 we&rsquo;ll create a real case of a view/admin and add it to this project.</p>

<p>You can clone/view the repo of this project <a href="https://github.com/PolCPP/Laravel-administrator-tutorial">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://PolCPP.github.io/blog/2014/06/11/hello-world/"/>
    <updated>2014-06-11T16:12:53+01:00</updated>
    <id>http://PolCPP.github.io/blog/2014/06/11/hello-world</id>
    <content type="html"><![CDATA[<p>So here i am starting another blog, but this time on octopress.</p>

<p>I&rsquo;ve Been using wordpress and other platforms (like tumblr) for a while but i keep stopping writing because they&rsquo;re heavy and clunky, i forget their passwords and urls plus i rather write things in markdown.</p>

<p>And what the heck, using github to host your blog? That&rsquo;s awesome!</p>
]]></content>
  </entry>
  
</feed>
